{"version":3,"sources":["Components/Section/Section.js","Components/Form/Form.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","index.js"],"names":["Section","children","className","InputForm","state","filter","name","number","handleChange","e","setState","currentTarget","value","reset","handelSubmit","preventDefault","props","onSubmit","this","type","pattern","title","required","onChange","Component","ContactList","contacts","onDelete","map","id","onClick","Filter","handleOnChange","App","formSubmitHandler","contact","uuidv4","some","someContact","toLocaleLowerCase","alert","contactId","prevState","formChangeHandler","filterContacts","includes","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09b87545.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Section.css\";\r\n\r\nconst Section = ({ children }) => (\r\n  <section className=\"container\">{children}</section>\r\n);\r\nexport default Section;\r\n","import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport \"./Form.css\";\r\n\r\nclass InputForm extends Component {\r\n  state = {\r\n    filter: \"\",\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.currentTarget.name]: e.currentTarget.value,\r\n    });\r\n  };\r\n  reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n  handelSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className=\"form\" onSubmit={this.handelSubmit}>\r\n        <label className=\"form-label\">\r\n          Name:\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={name}\r\n          />\r\n        </label>\r\n        <label className=\"form-label\">\r\n          Number:\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={number}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contacts</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./ContactList.css\";\r\n\r\nconst ContactList = ({ contacts, onDelete }) => (\r\n  <ul className=\"contact-list\">\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li className=\"contact-item\" key={id}>\r\n        <span className=\"contact-data-name\">{name}:</span>\r\n        <span className=\"contact-data-number\">{number}</span>\r\n\r\n        <button\r\n          className=\"delete__btn\"\r\n          onClick={() => onDelete(id)}\r\n          type=\"button\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  onDelete: PropTypes.func,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Filter.css\";\r\n\r\nconst Filter = ({ value, handleOnChange }) => {\r\n  return (\r\n    <div>\r\n      <h3> Find contact dy name </h3>\r\n      <label>\r\n        <input\r\n          className=\"filter-form\"\r\n          type=\"\"\r\n          name=\"filter\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          value={value}\r\n          onChange={handleOnChange}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\nFilter.propTypes = {\r\n  handleOnChange: PropTypes.func,\r\n  value: PropTypes.string.isRequired,\r\n};\r\nexport default Filter;\r\n","import React from \"react\";\nimport { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Section from \"./Components/Section\";\nimport Form from \"./Components/Form\";\nimport ContactList from \"./Components/ContactList\";\nimport Filter from \"./Components/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n  formSubmitHandler = ({ name, number }) => {\n    const { contacts } = this.state;\n    const contact = { id: uuidv4(), name, number };\n\n    contacts.some(\n      (someContact) =>\n        someContact.name.toLocaleLowerCase() ===\n        contact.name.toLocaleLowerCase()\n    )\n      ? alert(`${name} is already in contacts`)\n      : this.setState(({ contacts }) => ({\n          contacts: [contact, ...contacts],\n        }));\n  };\n  onDelete = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  formChangeHandler = (e) => {\n    this.setState({\n      [e.currentTarget.name]: e.currentTarget.value,\n    });\n  };\n  filterContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contact) =>\n      contact.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase())\n    );\n  };\n  componentDidMount() {\n    const contacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    if (JSON.parse(localStorage.getItem(\"contacts\"))) {\n      this.setState({\n        contacts: contacts,\n      });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n  render() {\n    const filterContacts = this.filterContacts();\n    return (\n      <Section>\n        <h1>Phonebook</h1>\n        <Form onSubmit={this.formSubmitHandler} />\n        <h2>Contacts</h2>\n        <Filter\n          value={this.state.filter}\n          handleOnChange={this.formChangeHandler}\n        />\n        <ContactList contacts={filterContacts} onDelete={this.onDelete} />\n      </Section>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}